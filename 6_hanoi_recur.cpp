
#include <iostream>

void hanoi(int n, int i, int k);

int main()
{
    int n;
    std::cout << "Enter the amount of disks" << std::endl;
    std::cin >> n;

    hanoi(n, 1, 2); //1 - начальный штырь, 2 - финальный
}

void hanoi(int n, int i, int j)
{
    if (n == 1)
    { //если диск один, то тривиально перекладываем его с начального штыря на конечный
        std::cout << "Move disk " << n << " from pin " << i << " to pin " << j << std::endl;
    }
    else
    {
        int tmp = 6 - i - j; //всего 3 штыря: №1б №2, №3. 1 + 2 + 3 = 6. Мы так занумеровали вспомогательный штырь.
        hanoi(n - 1, i, tmp); //рекуррентная задача: перекладываем пирамидку из n - 1 верхних дисков на вспомогательный штырь
        // при этом для любого диска этой задачи все штыри доступны, т.к. мы оставили самый большой диск внизу
        std::cout << "Move disk " << n << " from pin " << i << " to pin " << j << std::endl; //а теперь перекладываем на финальный штырь самый большой диск (он только что освободился)
        hanoi(n - 1, tmp, j); //а теперь эту пирамидку из n-1 дисков перекладываем на конечный, j-й, штырь (где лежит самый большой, n-й, диск)
    }
}
